# vim 使用：
    > 官方手册manul：
        官方提供两种手册:
        user manual:使用手册，侧重于快速上手使用，包括安装、配置、
        使用及教程
            
        reference manual：参考手册，侧重分模块详细描述其工作机制
            如教程;vim脚本编写调试;gui;编辑命令;vimrc配置;api;plugin;
            vim调试
              运行机制;代码实现的环境变量，变量，函数等
        × 命令:
            查看vim版本: vim --version
        × 命令行:
            
            :help tagbar    "查看已安装配置好的插件tagbar的帮助文档
            :help $VIM      "
            :help $VIMRUNTIME "
        × vim脚本:
            vim脚本基于vim自己的vim script 语言，通过该语言我们
            可以编写脚本去配置插件、操控vim编辑文本、键盘映射等
    
      # vim插件安装、配置、使用：
        具体查看各插件的官方手册
    >安装:
     :help $VIMRUNTIME  "查看vim启动和插件加载机制
     :help runtimepath  "查看runtimepath，这是插件的安装位置也是加载位置
      unix:runtimepath=~/.vim/
     一般:
     1.拷贝插件.vim文件--->~/.vim/plugin/
        或拷贝相应的文件夹中到~/.vim/对应的文件夹
     2.拷贝插件.txt帮助文档--->~/.vim/doc/
     3.:helptags ~/.vim/doc ”将插件帮助问加载到vim，以便可:help taglist.txt
    
    >配置,使用:
     vim --version "查看vim的编译选项，包括vimrc文件路径、$VIM预设值
     unix:
        $VIM=/usr/share/vim
        $VIMRUNTIME=~/.vim/
     vimrc: 
        可在~/.vimrc 中配置vim代码缩进;语法高亮;插件配置;键盘映射
        配置后需:source ~/.vimrc 生效和重启vim
        vimrc 位置：
        系统:$VIM/vimrc
        用户:~/.vimrc
        见~/.vimrc


    vim卡死：
    ctrl+s：造成vim‘假死’，即vim卡住
    ctrl+q：即可恢复正常。

终端与vim切换:
	ctrl+z:vim切换至终端
	fg：终端切换至vim，格式：fg [id],切换至编号为id的vim窗口。

打开文件：
	vim f1 f2 ：打开文件只显示一个窗口，只能通过:bn,:bp进行文件切换
	vim -o f1 f2 ：纵向分屏打开多个文件
	vim -O f1 f2 ：横向分屏打开多个文件
	:new f1 :新建文件f1
	:vs f ： 在终端内，横向分屏打开文件
	:sp f :  在终端内，纵向分屏打开文
	:vs,:sp只能对当前文件进行分屏
	:open f :打开文件，vim只会显示该文件。
	:f :显示当前鼠标所在文件名
	:files  :列出当前vim，所有打开的文件名
文件切换：
	ctrl+w+w:进行窗口切换  
	:bn:切换至下一个文件，必须先保存当前文件
	:bp:切换至上一个文件，必须先保存好当前文件
    gf:文件跳转，如系统或自定义头文件的跳转

文件关闭：
    :e!：重新加载当前文档，且不保存修改
	:q 不修改保存，退出---shift zq
	:q! :强制不保存修改，退出
	:wq:保存修改，退 出 ---shift zz
	:w ：保存修改，但不退出
	:wa:保存当前vim的所有文件的修改
	:wqa:保存当前所有修改后，再退出
	:w f1 :文件另存为f1，若f1已存在，则:w! f1强制的覆盖另存为f1
	:w!:对只读文件，进行强制写入，保存。
	:qa :所有的窗口，不修改，退出
	:only :关闭出当前外 的其他窗口
光标移动:
    g: 命令模式下，g键。光标定位到第一行，即文首
    G: 命令模式下,按大写G建，定位到最后一行，即文末
    num+G: 命令命令模式下，数字加大写G，定位到数字指定行.
    


> 区域操作:
    可视化模式: 该模式下可以键盘/鼠标进行光标移动，从而进行区域选定
    v : 可视化字符模式
    V : 可视化行模式，等价  shift + V 。
    ctrl +V ：可视化块模式，即按矩形区域xuand选定.o和O调整边

    如可视化模式下，结合光标移动，选取区域：
        vggy :进入v模式，选取当前至最后一行的内容并复制。
        vaw:进入v模式，选取一个单词，此时光标应在词首
> 列块操作：
    列块删除: ctrl+v d
    列块插入:ctrl+v shift+i 输入 esc+esc
    列块替换:ctrl+v c 输入 esc+esc
    



复制，粘贴，剪切，撤销，重复上一个上几个操作等操作
	y :命令模式下，表示复制光标指定内容
	d ：命令模式下，表示删除。
    p ：命令模式下。可以粘贴多次。而插入可视模式下，只能粘贴一次，
        因为此时是替换粘贴，被替换(往往是换行符或空格)被作为下一次粘贴的内容
        因此。要粘贴多次，应该在命令模式下，进行。
    ctrl+；:插入模式。粘贴板，shift取消显示粘贴板`
	x ：命令模式下，剪切。
	u ：命令模式下，撤销前一个操作，连续多次u，表示连续多次撤销
	ctrl+r：命令模式下，反撤销前一个操作，连续多次，表示连续反撤销。

	. :命令模式下，表示重复上一个操作
查找替换：命令模式下，vim查找支持正则表达式
	/word :
        不完整且大小写敏感向下查找
	?word :
        同上，但是是向上查找。
        × ?word\c:大小写不敏感向上查找。
        × set ignorecase    "忽略大小写敏感
        × set smartcase     "只要有一个字符大写就大小写敏感
    /\<word\>:完整一个词查找大小写敏感查
     shift *:
        光标位置处word的完整查找
     n，N键：
        分别表示下一项和上一项

	:n1,n2s/word1/word2/g :将n1，n2之间的word1，全部替换为word2
        × :.,+3s/目标/替换/gci  "光标行至接下来的三行。g表示该选区的所有目标;c表示每次替换需确认;i表示大小写不敏感;I敏感
        × :%s/word1/word2       "%表示整个文档选区;无替换标志表示只替换第一个目标，不需确认，大小写敏感。
	:1,$s/word1/word2/g:当前文件内，将word1，全部替换为word2.
#命令行模式:
    q:正常模式下，按q开始记录命令(显示q@),再按q，退出记录。
    q+/:进入命令行模式，这样就能在命令行窗口可以编辑之前q记录的历史命令。
#命令模式：
    正常模式下，按:或/进入命令模式:
    : :
    / :
#vim内shell交互
    :!commad ：vim内执行shell命令(/bin/bash)，但不退出vim
    :r!command ：将执行结果插入鼠标下一行

高亮，自动格式，自动联想:
	:set nu :显示当前窗口的行号
	:syntax :语法高亮
    
"vim中vim命令的快捷键在vim配置文件~/.vimrc中
文件只读
:set readonly
:set noreadonly
文件不可修改:
:set modifiable   "nm
:set noma         "mn



+++++++++++++++++++++++vimrc配置++++++++++++++++++++++++++++++
.vimrc ：
    vim --version 查看具体的编译信息，其中就包含加载vimrc的系统路径和用户路径
    vimrc文档是vim的配置文档，基于以vim编辑器作为解释器的vim script 脚本语
    语言，参考:vim 官方文档user manual-write a vim script

查看vimrc目录：
	:echo $VIM  :查看系统vimrc所在目录,/etc/vimrc
	:echo $HOME :查看用户vimrc所在目录,root: /root ;  一般用户: /home/用户名
.vimr文件配置：修改用户或系统的vimrc配置文件,本次配置了root用户的.vimrc,即/root/.vimrc
该配置文件只作用与该用户所拥有的文件。


"""""""""""""""""ctags""""""""""""""
ctrl+]:跳转到标签所在的定义源文件
ctrl+w+]:以分割窗口跳转
ctrl+O:跳回



++++++++++++++++++++++++taglist使用+++++++++++++++++++
""""taglist key---------
"以下光标应处于待处理的标签上
ctrl+ww :跳转窗口
HJKL：分别左、下、上、右移动光标
tl:显示当前文件的taglist列表

d:关闭taglist文件列表的某个文件的标签树;删除后只能:TlistAddFiles恢复
o:以打开新窗口的形式跳转键o所指定的tag所在文件
p：等价于双击tag，跳转到所在文件，并不新建窗口。使用ctrl o 退回到之前文件
u：更新taglist列表的tag
x:最大或最小尺寸显示taglist列表窗口
+: 展开当前标签树
-: 折叠当前标签树
=：折叠taglist所有标签树
*: 展开所有标签树
空格键:显示tag的原型
s:切换tagbar排序方式
+++++++++++
++++++++++++nerdtree++++++++

t 在标签页中打开
T 在后台标签页中打开
! 执行此文件
K 到第一个节点
J 到最后一个节点

u 打开上层目录
C 将选中目录或选中文件的父目录设为根结点
O 递归打开选中 结点下的所有目录
o 打开关闭文件或者目录
P 到根结点
p 到父结点
X 递归合拢选中结点下的所有目录
x 合拢选中结点的父目录
R 递归刷新根结点
r 递归刷新选中目录

cd PWD切换为选中目录
CD 将当前根节点设为PWD
I 切换是否显示隐藏文件
F 切换是否显示文件
f 切换是否使用文件过滤器
m 显示文件系统菜单（添加、删除、移动操作）
? 帮助
